message(STATUS "Calling generators.")

# Default to cPython but use pypy if available as it is way faster.
find_program(PYTHON_BIN NAMES pypy python)

# Path to the directory used to store the generated files.
set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
file(MAKE_DIRECTORY ${GEN_DIR})

# Files generated by disgen.py.
set(GEN_DECODER_FILES
    ${GEN_DIR}/ARMDecodingTable.cpp
    ${GEN_DIR}/ARMDecodingTable.h
    ${GEN_DIR}/ARMInstructionFields.h
    ${GEN_DIR}/ARMtoString.cpp
    ${GEN_DIR}/ARMtoString.h
)

# Files generated by emugen.py.
set(GEN_INTERPRETER_FILES
    ${GEN_DIR}/ARMInterpreter.cpp
    ${GEN_DIR}/ARMInterpreter.h
)

message(STATUS "Placing generated files in ${GEN_DIR}.")

if(RETOOLS_USE_CACHED_SOURCES)
    set(CACHED_GEN_DIR ${CMAKE_SOURCE_DIR}/cached/src/libspec/arm/gen)

    # Copy cached decoder files.
    add_custom_command(
        OUTPUT ${GEN_DECODER_FILES}
        COMMAND ${CMAKE_COMMAND} -E copy ${CACHED_GEN_DIR}/ARMDecodingTable.cpp ${GEN_DIR}/ARMDecodingTable.cpp
        COMMAND ${CMAKE_COMMAND} -E copy ${CACHED_GEN_DIR}/ARMDecodingTable.h ${GEN_DIR}/ARMDecodingTable.h
        COMMAND ${CMAKE_COMMAND} -E copy ${CACHED_GEN_DIR}/ARMInstructionFields.h ${GEN_DIR}/ARMInstructionFields.h
        COMMAND ${CMAKE_COMMAND} -E copy ${CACHED_GEN_DIR}/ARMtoString.cpp ${GEN_DIR}/ARMtoString.cpp
        COMMAND ${CMAKE_COMMAND} -E copy ${CACHED_GEN_DIR}/ARMtoString.h ${GEN_DIR}/ARMtoString.h
        COMMENT "Copying cached ARMv7 decoder files."
    )

    # Call emugen.py.
    add_custom_command(
        OUTPUT ${GEN_INTERPRETER_FILES}
        COMMAND ${CMAKE_COMMAND} -E copy ${CACHED_GEN_DIR}/ARMInterpreter.cpp ${GEN_DIR}/ARMInterpreter.cpp
        COMMAND ${CMAKE_COMMAND} -E copy ${CACHED_GEN_DIR}/ARMInterpreter.h ${GEN_DIR}/ARMInterpreter.h
        COMMENT "Copying cached ARMv7 interpreter files."
    )
else()
    # Files that when changed, should trigger a re-generation of the decoder.
    set(GEN_DECODER_DEPENDS
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts/specification/ARMv7DecodingSpec.py
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts/specification/ARMv7Types.py
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts/disgen.py
    )

    # Files that when changed, should trigger a re-generation of the interpreter.
    set(GEN_INTERPRETER_DEPENDS
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts/specification/ARMv7OperationSpec.py
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts/specification/ARMv7Context.py
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts/specification/ARMv7Types.py
        ${CMAKE_CURRENT_SOURCE_DIR}/scripts/emugen.py
    )

    # Path to generator scripts.
    set(DISGEN_SCRIPT ${CMAKE_CURRENT_SOURCE_DIR}/scripts/disgen.py)
    set(EMUGEN_SCRIPT ${CMAKE_CURRENT_SOURCE_DIR}/scripts/emugen.py)

    # Call disgen.py.
    add_custom_command(
        OUTPUT ${GEN_DECODER_FILES}
        COMMAND ${PYTHON_BIN} ${DISGEN_SCRIPT} --directory ${GEN_DIR} --gen_decoder --gen_to_str
        DEPENDS ${GEN_DECODER_DEPENDS}
        COMMENT "Generating ARMv7 decoder files."
    )

    # Call emugen.py.
    add_custom_command(
        OUTPUT ${GEN_INTERPRETER_FILES}
        COMMAND ${PYTHON_BIN} ${EMUGEN_SCRIPT} --directory ${GEN_DIR} --generate
        DEPENDS ${GEN_INTERPRETER_DEPENDS}
        COMMENT "Generating ARMv7 interpreter files."
    )
endif()

# Create a target for the generated decoder files.
add_custom_target(
    libspec_arm_decoder
    DEPENDS ${GEN_DECODER_FILES}
    COMMENT "Checking if re-generation of decoder files is required."
)

# Create a target for the generated interpreter files.
add_custom_target(
    libspec_arm_interpreter
    DEPENDS ${GEN_INTERPRETER_FILES}
    COMMENT "Checking if re-generation of interpreter files is required."
)

get_filename_component(GENERATED_FILES_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/.. ABSOLUTE)

# Save the generated files list as a property that can be accessed by other targets.
set_target_properties(libspec_arm_decoder PROPERTIES GENERATED_FILES "${GEN_DECODER_FILES}")
set_target_properties(libspec_arm_decoder PROPERTIES GENERATED_FILES_DIRECTORY "${GENERATED_FILES_DIRECTORY}")
set_target_properties(libspec_arm_interpreter PROPERTIES GENERATED_FILES "${GEN_INTERPRETER_FILES}")
set_target_properties(libspec_arm_interpreter PROPERTIES GENERATED_FILES_DIRECTORY "${GENERATED_FILES_DIRECTORY}")

# We need to generate the decoder files before the interpreter files.
add_dependencies(libspec_arm_interpreter libspec_arm_decoder)